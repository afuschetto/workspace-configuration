### Set work environment
cd ${HOME}/mongo
. python3-venv/bin/activate

function mongo_build_dynamic {
  ./buildscripts/scons.py --variables-files=etc/scons/mongodbtoolchain_stable_clang.vars --dbg=on --opt=on --link-model=dynamic --ninja generate-ninja ICECC=icecc CCACHE=ccache
  ninja -j200 install-all
}

function mongo_build_static {
  ./buildscripts/scons.py --variables-files=etc/scons/mongodbtoolchain_stable_clang.vars --dbg=on --opt=on --ninja generate-ninja ICECC=icecc CCACHE=ccache
  ninja -j200 install-all
}

function mongo_build_symbols {
  ./buildscripts/scons.py --variables-files=etc/scons/mongodbtoolchain_v3_clang.vars --dbg=on --opt=on --modules=compiledb ICECC=icecc CCACHE=ccache
}

function mongo_run_test {
  ./buildscripts/resmoke.py run \
    --mongodSetParameters='{ logComponentVerbosity: {verbosity: 2}, featureFlagToaster: true, featureFlagSpoon: true, featureFlagAuthorizationContract: true, featureFlagTenantMigrations: true, featureFlagImprovedAuditing: true, featureFlagRuntimeAuditConfig: true, featureFlagTimeseriesCollection: true, featureFlagShardingFullDDLSupport: true, featureFlagShardingFullDDLSupportTimestampedVersion: true, featureFlagWindowFunctions: true, featureFlagUseSecondaryDelaySecs: true, featureFlagChangeStreamsOptimization: true }' \
    --storageEngine=wiredTiger \
    --storageEngineCacheSizeGB=0.5 \
    --jobs=1 \
    --suite=sharding \
    $@
}

function mongo_format_code {
  ./buildscripts/clang_format.py format-my
}

function mongo_code_review {
  \python3 ~/kernel-tools/codereview/upload.py \
    --git_similarity=100 \
    --check-clang-format \
    --check-eslint \
    --server "mongodbcr.appspot.com" -H "mongodbcr.appspot.com" \
    --jira_user "antonio.fuschetto" \
    --title "$(git log -n 1 --pretty=%B | head -n1)" \
    --cc "codereview-mongo@10gen.com,serverteam-sharding-emea@mongodb.com" \
    $@
}
